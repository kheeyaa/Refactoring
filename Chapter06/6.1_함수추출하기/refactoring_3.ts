// ÏòàÏãú: ÏßÄÏó≠ Î≥ÄÏàòÏùò Í∞íÏùÑ Î≥ÄÍ≤ΩÌï† Îïå
declare const Clock: any;
export function printOwing(invoice) {
  printBanner();

  // üî• Ìï®Ïàò Ï∂îÏ∂ú
  // 1. outstanding Î≥ÄÏàò ÏúÑÏπò Ïù¥Îèô
  // 4. Ï∂îÏ∂úÌïú Ìï®ÏàòÎ•º Ìò∏Ï∂úÌïòÎäî Î¨∏Ïû•ÏúºÎ°ú ÍµêÏ≤¥
  const outstanding = calculateOutstanding(invoice); // üî• ÏßÄÏó≠ Î≥ÄÏàòÎ•º Îß§Í∞úÎ≥ÄÏàòÎ°ú Ï†ÑÎã¨ (Ïä¨ÎùºÏù¥Îìú

  recordDueDate(invoice);
  printDetails(invoice, outstanding);

  // 2. Ï∂îÏ∂úÌï† Î∂ÄÎ∂ÑÏùÑ ÏÉàÎ°úÏö¥ Ìï®ÏàòÎ°ú Î≥µÏÇ¨
  // 3. Ï∂îÏ∂úÌïú Ìï®ÏàòÏóêÏÑú ÏÇ¨Ïö©Ìï† Î≥ÄÏàòÎ•º Îß§Í∞úÎ≥ÄÏàòÎ°ú Ï†ÑÎã¨ Î∞è Î≥ÄÍ≤ΩÎêú Î≥ÄÏàò Î∞òÌôò
  // 5. ÏΩîÎìú Ïä§ÌÉÄÏùºÎßÅ Ï†ÅÏö© (outstanding -> result, let -> const)
  function calculateOutstanding(invoice) {
    let result = 0;
    for (const o of invoice.orders) {
      result += o.amount;
    }
    return result;
  }

  function recordDueDate(invoice) {
    const today = Clock.today; // https://martinfowler.com/bliki/ClockWrapper.html
    invoice.dueDate = new Date(
      today.getFullYear(),
      today.getMonth(),
      today.getDate() + 30
    );
  }

  function printBanner() {
    console.log("***********");
    console.log("**Í≥†Í∞ù Ï±ÑÎ¨¥**");
    console.log("***********");
  }

  function printDetails(invoice, outstanding) {
    console.log(`Í≥†Í∞ùÎ™Ö: ${invoice.customer}`);
    console.log(`Ï±ÑÎ¨¥Ïï°: ${outstanding}`);
    console.log(`ÎßàÍ∞êÏùº: ${invoice.dueDate.toLocaleDateString()}`);
  }
}
